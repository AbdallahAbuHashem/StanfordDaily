# Node.js with React
# Build a Node.js project that uses React.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

pool:
  vmImage: 'Ubuntu 16.04'

steps:
- checkout: self 
  persistCredentials: true

- task: NodeTool@0
  inputs:
    versionSpec: '10.x'
  displayName: 'Install Node.js'

- script: |
    npm install
    npm install -g expo-cli
  displayName: 'npm install'

- task: InstallSSHKey@0
  inputs:
    hostName: tsd_ssh_host_name
    sshPublicKey: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC82NmuEdEiUfpPYu9Yh0bWkshBwSoN2/RnL3o33JcKZO1vug+V0l+64hhA/H8PFkPaQ4c2mM6hyuDcMkh9ertGILgvlN2XPie3PUz65xbNUXy+e/HqaDdLmwmjPvSnLFE3WxIUO/BxI84Zn9+ToYH9EUAAKaUmgLV/1dwl0w6EdBHyzfYOwGNL+CU9slta3CW3UafeIQvIKzbUw2hC6yzSFR2DoYwIYW5t6SS4eqTQ4DLHZX0kdF3o12SgEdCEWlTz3wfgLrqdzOpYBBN0YyYLmL1arNFLNz0HQpNhiwoSANieRvei5Il4Q9OKgmNHrCMzQoccs3WdAt2F1rZOPxTF arama@DNa1de7b5.SUNet
    sshKeySecureFile: 

- script: |
    git checkout master
    expo login --non-interactive -u ${EXPO_USERNAME} -p ${EXPO_PASSWORD}
    expo eject --non-interactive --eject-method expoKit
    displayName: 'expo build script'
  env:
    EXPO_USERNAME: $(EXPO_USERNAME)
    EXPO_PASSWORD: $(EXPO_PASSWORD)

- script: |
    git config --global user.name "Azure DevOps CI Server"
    git config --global user.email "ashwin@stanforddaily.com"
    git add -A
    git commit -m "Eject to ExpoKit"
    #git remote add release git@ssh.dev.azure.com:v3/stanforddaily/StanfordDaily_Mobile/StanfordDaily_Mobile
    git remote add release https://stanforddaily@dev.azure.com/stanforddaily/StanfordDaily_Mobile/_git/StanfordDaily_Mobile
    git push -f release HEAD:master
  displayName: 'git push to VSTS repo'
